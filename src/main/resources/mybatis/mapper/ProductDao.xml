<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.crm.dao.ProductDao" >
    <resultMap id="productMap" type="com.example.crm.entity.Product">
        <id column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="part_number" property="partNumber"/>
        <result column="sale_start_date" property="saleStartDate"/>
        <result column="product_category" property="productCategory"/>
        <result column="active" property="active"/>
        <result column="sale_end_date" property="saleEndDate"/>
        <result column="product_number" property="productNumber"/>
        <result column="website" property="website"/>
        <result column="ventor_name" property="ventorName"/>
        <result column="ventor_partno" property="ventorPartno"/>
        <result column="create_time" property="createTime"/>
        <result column="modified_time" property="modifiedTime"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="description" property="description"/>
        <result column="update_info" property="updateInfo"/>
        <result column="father_id" property="fatherId"/>
        <result column="bundle_id" property="bundleId"/>
        <association property="price" column="price_id"
                     javaType="com.example.crm.entity.Price">
            <id column="price_id" property="priceId"/>
        </association>
        <association property="stockInfo" column="stock_info_id"
                     javaType="com.example.crm.entity.StockInfo">
            <id column="stock_info_id" property="stockInfoId"/>
        </association>
        <association property="document" column="document_id"
                     javaType="com.example.crm.entity.Document">
            <id column="document_id" property="documentId"/>
        </association>
    </resultMap>

    <select id="getProductList" resultMap="productMap">
        select p.*
        from product p
        order by product_id ASC
    </select>

    <select id="getProductById" resultMap="productMap">
        select p.*
        from product p
        where p.product_id = #{productId}
    </select>

    <select id="getProduct" resultMap="productMap">
        select p.*
        from product p
        <where>
            <if test="productName!=null">
                product_name=#{productName}
            </if>
            <if test="partNumber">
                and part_number = #{partNumber}
            </if>
            <if test="price !=null and price.priceId !=null">
                and price_id=#{price.priceId}
            </if>
            <if test="stockInfo !=null and stockInfo.stockInfoId !=null">
                and stock_info_id=#{stockInfo.stockInfoId}
            </if>
        </where>
    </select>

    <insert id="insertProduct" parameterType="com.example.crm.entity.Product" keyProperty="productId" keyColumn="product_id">
        insert into product(product_name,part_number,sale_start_date,product_category,active,sale_end_date,product_number,website,ventor_name,ventor_partno,create_time,modified_time,manufacturer,description,update_info,price_id,stock_info_id,document_id,father_id,bundle_id)
        values(#{productName},#{partNumber},#{saleStartDate},#{productCategory},#{active},#{saleEndDate},#{productNumber},#{website},#{ventorName},#{ventorPartno},#{createTime},#{modifiedTime},#{manufacturer},#{description},#{updateInfo},#{price.priceId},#{stockInfo.stockInfoId},#{document.documentId},#{fatherId},#{bundleId})
    </insert>

    <update id="updateProduct">
        update product
        <set>
            <if test="productName != null">product_name = #{productName},</if>
            <if test="partNumber != null">part_number = #{partNumber},</if>
            <if test="saleStartDate != null">sale_start_date = #{saleStartDate},</if>
            <if test="productCategory != null">product_category = #{productCategory},</if>
            <if test="active != null">active = #{active},</if>
            <if test="saleEndDate != null">sale_end_date = #{saleEndDate},</if>
            <if test="productNumber != null">product_number = #{productNumber},</if>
            <if test="website != null">website = #{website},</if>
            <if test="ventorName != null">ventor_name = #{ventorName},</if>
            <if test="ventorPartno != null">ventor_partno = #{ventorPartno},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="modifiedTime != null">modified_time = #{modifiedTime},</if>
            <if test="manufacturer != null">manufacturer = #{manufacturer},</if>
            <if test="description != null">description = #{description},</if>
            <if test="updateInfo != null">update_info = #{updateInfo},</if>
            <if test="price != null and price.priceId != null">price_id = #{price.priceId},</if>
            <if test="stockInfo != null and stockInfo.stockInfoId != null">stock_info_id = #{stockInfo.stockInfoId},</if>
            <if test="document != null and document.documentId != null">document_id = #{document.documentId},</if>
            <if test="fatherId != null">father_id = #{fatherId},</if>
            <if test="bundleId != null ">bundle_id = #{bundleId}</if>
        </set>
        where product_id = #{productId}
    </update>

    <delete id="deleteProduct">
        delete from product
        where product_id = #{productId}
    </delete>

    <select id="getRecentlyModified" resultMap="productMap">
        select p.*
        from product p
        where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(modified_time)
    </select>

    <select id="getUpdateInfo" resultMap="productMap">
        select p.update_info
        from product p
        where product_id=#{productId}
    </select>

    <select id="findDuplicates" resultMap="productMap">
        select p.*
        from product p
        where
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach> in
        (select
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        from product p group by
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        having
          count(
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        )>1)
        <foreach collection="">

        </foreach>
    </select>

    <select id="getProductByOrganizationId" resultMap="productMap">
        select p.*
        from product p
        where p.organization_id = #{organizationId}
    </select>

    <select id="getParentProduct" resultMap="productMap">
        select p.*
        from product p,parent_product parent
        where p.product_id in
          (select parent.parent_id
          from parent_product parent
          where parent.product_id={productId})
    </select>

    <select id="getBundleProduct" resultMap="productMap">
         select p.*
        from product p,product_bundles bundle
        where p.product_id in
          (select bundle.bundle2_id
          from product_bundles bundle
          where bundle.bundle1_id={productId})
    </select>
</mapper>